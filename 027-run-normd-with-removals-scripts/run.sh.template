#!/bin/bash

set -e
set -u

working_d=%%WD%%

RAM_DIR=%%RAM_DIR%%

UPSTREAM_NORMD=%%UPSTREAM_NORMD%%

DATA_OUT=%%DATA_OUT%%


msa_fasta=%%MSA_FASTA%%

canonical_name=%%CANONICAL_NAME%%



NORMD="./opt/norMD1_3/normd"
SCORING_MATRIX="./opt/norMD1_3/gon250.bla"
NORMD_OPTS="$SCORING_MATRIX 0 0 0 -v"

cd $working_d
msa_tab=$msa_fasta-tab
num_seq=$(wc -l $msa_tab | awk '{print $1}')

mkdir -p $RAM_DIR 2> /dev/null && true

out_dx1_mod_file=$DATA_OUT/$canonical_name-normd-dx1-mod-seq-scr
cat /dev/null > $out_dx1_mod_file

# Get the whole MSA score
whole_score=$(cat $UPSTREAM_NORMD/$canonical_name-whole-msa-normd-scr)
whole_score_mod=$(cat $UPSTREAM_NORMD/$canonical_name-whole-msa-normd-mod-scr)

for seq_id in `seq 1 $num_seq`; do
  ram_file=$RAM_DIR/$canonical_name-seq$seq_id-removed
  seq_name=$(cat $msa_tab | awk "NR==$seq_id" | awk '{print $1}')

  # Remove a sequence
  cat $msa_tab | awk "NR!=$seq_id" > $ram_file

  # Convert tab to FASTA
  cat $ram_file | awk '{print ">" $1 "\n" $2}' > $ram_file.FASTA

  # Run NorMD 
  set +e
  score_raw=$($NORMD $ram_file.FASTA $NORMD_OPTS)
  set -e

  (echo "$score_raw" | grep "ERROR") && (
    echo "$score_raw" >&2
    exit 1 )

  normd=$(echo "$score_raw" | egrep "^norMD" | awk '{print $2}')
  lqrid=$(echo "$score_raw" | egrep "^LQR" | awk '{print $2}')
  md=$(echo "$score_raw" | egrep "^MD" | awk '{print $2}')
  maxmd=$(echo "$score_raw" | egrep "^maxMD" | awk '{print $2}')
  # By the way: NORMD = MD / (MaxMD * LQRID)

  normd_dx1_mod=$(ruby -e "puts $whole_score_mod - ($md / $maxmd)")
  echo -e "$seq_name\t$normd_dx1_mod" >> $out_dx1_mod_file

  rm $ram_file
done

sort -k2 $out_dx1_mod_file  > $out_dx1_mod_file-srt
mv $out_dx1_mod_file-srt    $out_dx1_mod_file

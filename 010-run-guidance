#!/bin/bash

source ./api/pipeline.sh
set -e
set -u

# Tags: slow-import depends-on-opt

GUIDANCE_EXEC="./opt/guidance.v1.1/www/Guidance/guidance.pl"
MAFFT_PATH="./opt/mafft-6.857-with-extensions/bin"

# Tags: takes-optional-arguments

if [ $# != 1 ] && [ $# != 2 ]; then
  echo "Usage: $0 <sample-size>  [-s]" >&2
  echo "" >&2
  echo "  <sample-size>        You may have several sizes of samples." >&2
  echo "                       Which size group do you whan scored?" >&2
  echo "" >&2
  echo "  -f                   force always runing, never skip any steps" >&2
  exit 1
fi

# Arguments
SAMPLE_SIZE=$1                              # sample size (mandatory)
set +u
[ "$2" == '-f' ] && export ALWAYS_RUN=true
[ -n "$2" ] && [ "$2" != '-f' ] && (echo "Invalid option $2"; exit 1)
set -u


DATA_IN="$0-data-in"
DATA_OUT="$0-data-out"
mkdir -p $DATA_IN $DATA_OUT 2> /dev/null && true

(cd 008-sample-data-out/; echo sample-size$SAMPLE_SIZE-*-list) | tr " " "\n" |
while read sample
do
  data_in_final="$DATA_IN/$sample-nogaps"
  function callback {
      mkdir -p $data_in_final{,-new} 2> /dev/null && true
      cat "008-sample-data-out/$sample" | sed 's/.tab$//' |
        while read file_name; do
          cat "005-reshape-data-in/fasta.tar.gz-extracted/$file_name" |
            tr -d "-" > "$data_in_final-new/$file_name" | # remove gaps
            sed '/^$/d' # remove double newlines

        done
      rm -rf $data_in_final
      mv $data_in_final{-new,}
  }
  parrent_done_time_prefix="008-sample-data-out/$sample"
  done_time_prefix=$data_in_final
  pipeline   $parrent_done_time_prefix   $done_time_prefix \
    "Importing 008-sample-data-out/$sample-list items \
     from 005-reshape-data-in/fasta.tar.gz-extracted \
     removing all gaps (MSA alignment information) as we import" callback
done



mkdir -p $DATA_IN/tasks 2> /dev/null && true
(cd $DATA_IN; echo sample-*-list-nogaps | tr " " "\n") |
while read sample; do
  (cd $DATA_IN/$sample; echo *.FASTA | tr " " "\n") |
  while read fasta_file; do
    cat 010-run-guidance-scripts/guidance-run.sh.template |
      sed "s|%%WD%%|`pwd`|g" |
      sed "s|%%ALWAYS_RUN%%|$ALWAYS_RUN|g" |
      sed "s|%%FASTA_FILE%%|$fasta_file|g" |
      sed "s|%%MAFFT_PATH%%|$MAFFT_PATH|g" |
      sed "s|%%GUIDANCE_EXEC%%|$GUIDANCE_EXEC|g" |
      sed "s|%%DATA_IN%%|$DATA_IN/$sample|g" |
      sed "s|%%DATA_OUT%%|$DATA_OUT/$sample/$fasta_file|g" |
        cat > $DATA_IN/tasks/$sample-$fasta_file-qsub-sh
  done
done

#echo $DATA_IN/tasks/*-qsub-sh | tr " " "\n"

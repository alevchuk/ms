#!/bin/bash

set -e
set -u

cd %%WD%%

source ./api/pipeline.sh

export PATH=%%MAFFT_PATH%%:$PATH
GUIDANCE_EXEC=%%GUIDANCE_EXEC%%

DATA_OUT=%%DATA_OUT%%
DATA_IN=%%DATA_IN%%
mkdir -p "$DATA_OUT"{,-new} 2> /dev/null && true


function callback {

  (cd $DATA_IN; echo *.FASTA | tr " " "\n") | while read fasta_file; do

    # fasta file must not have gaps
    $GUIDANCE_EXEC --msaProgram MAFFT --seqType aa \
      --seqFile $DATA_IN/$fasta_file --outDir $DATA_OUT-new/$fasta_file
  done

  # Danger Zone
  if [ -n $DATA_OUT ]; then # variable must be non empty
    rm -rf "$DATA_OUT"
  fi

  mv "$DATA_OUT"{-new,}

}
parrent_done_time_prefix="$DATA_IN"
done_time_prefix="$DATA_OUT"
pipeline   $parrent_done_time_prefix   $done_time_prefix \
  "Running GUIDANCE on $DATA_IN. Output is going into $DATA_OUT" \
  callback

#!/bin/bash

source ./api/pipeline.sh
set -e
set -u

# Tags: slow-import takes-optional-arguments

set +u
[ ! -n "$1" ] && SEED=1 || SEED="$1"
set -u

IN_DIR="$0-data-in"
OUT_DIR="$0-data-out-s$SEED"

mkdir -p $IN_DIR $OUT_DIR 2> /dev/null && true


# 11 min
function cb {
    echo "Importing (few files) 005-reshape-data-out/msa-*"
    cp ./005-reshape-data-out/msa-* $IN_DIR/

    echo "Importing (rsync) 005-reshape-data-out/all-alignments-tab"
    mkdir -p $IN_DIR/all-alignments-tab 2> /dev/null && true
    rsync -a ./005-reshape-data-out/all-alignments-tab/ \
      $IN_DIR/all-alignments-tab/ 
}
parrent_done_time_prefix="./005-reshape-data-out"
done_time_prefix=$IN_DIR
pipeline   $parrent_done_time_prefix   $done_time_prefix \
  "Importing data into $IN_DIR" cb


function cb {
    mkdir -p "$OUT_DIR/sample-100-alignments"{,-new} 2> /dev/null && true
    $0-scripts/sample.R $SEED 100 $IN_DIR/msa-list | while read file_name; do
      cp "$IN_DIR/all-alignments-tab/$file_name" \
        "$OUT_DIR/sample-100-alignments-new/"
    done
    rm -rf "$OUT_DIR/sample-100-alignments"
    mv "$OUT_DIR/sample-100-alignments"{-new,}
}
parrent_done_time_prefix=$done_time_prefix
done_time_prefix=$OUT_DIR
pipeline   $parrent_done_time_prefix   $done_time_prefix \
  "Sample $SEED. Taking 100 items from $IN_DIR/all-alignments-tab" cb
